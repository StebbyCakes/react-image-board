{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ImageForm","props","state","caption","url","handleSubmit","bind","handleInput","event","preventDefault","this","addImage","setState","target","name","value","onSubmit","type","onChange","Component","ImageList","images","map","image","index","src","alt","ImageBoard","push","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAGMA,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,QAAS,GACTC,IAAK,IAGP,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,gDAYnB,SAAaE,GACXA,EAAMC,iBACNC,KAAKT,MAAMU,SAASD,KAAKR,OACzBQ,KAAKE,SAAS,CACZT,QAAS,GACTC,IAAK,O,yBAIT,SAAYI,GACVE,KAAKE,SAAL,eAAiBJ,EAAMK,OAAOC,KAAON,EAAMK,OAAOE,U,oBAGpD,WACE,OACE,uBAAMC,SAAUN,KAAKL,aAArB,UACE,uBAAOY,KAAK,OAAOH,KAAK,UAAUC,MAAOL,KAAKR,MAAMC,QAASe,SAAUR,KAAKH,cAC5E,uBAAOU,KAAK,MAAMH,KAAK,MAAMC,MAAOL,KAAKR,MAAME,IAAKc,SAAUR,KAAKH,cACnE,wBAAQU,KAAK,SAAb,yB,GAhCgBE,aAwDxB,SAASC,EAAUnB,GACf,IAAMoB,EAASpB,EAAMoB,OAAOC,KAAI,SAACC,EAAOC,GAAR,OAC9B,+BACE,qBAAKC,IAAKF,EAAMnB,IAAKsB,IAAI,KACzB,4BAAIH,EAAMpB,YAFHqB,MAMX,OACE,6BACGH,I,IA6CMM,E,kDAtCb,WAAY1B,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXmB,OAAQ,IAGV,EAAKV,SAAW,EAAKA,SAASL,KAAd,gBAPC,E,qDAUnB,WAQEI,KAAKE,SAAS,CAAES,OAPD,CACb,CACElB,QAAS,eACTC,IAAK,mK,sBAOX,SAASmB,GACP,IAAMF,EAAM,YAAOX,KAAKR,MAAMmB,QAC9BA,EAAOO,KAAKL,GACZb,KAAKE,SAAS,CAACS,a,oBAGjB,WAEE,OADAQ,QAAQC,IAAIpB,MAEV,gCACE,cAAC,EAAD,CAAWC,SAAUD,KAAKC,WAC1B,cAACS,EAAD,CAAWC,OAAQX,KAAKR,MAAMmB,gB,GAlCbF,aC9DVY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.17539f83.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\n\nclass ImageForm extends Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      caption: '',\n      url: '',\n    }\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.addImage(this.state);\n    this.setState({\n      caption: '',\n      url: '',\n    });\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    return(\n      <form onSubmit={this.handleSubmit}>\n        <input type=\"text\" name=\"caption\" value={this.state.caption} onChange={this.handleInput}/>\n        <input type=\"url\" name=\"url\" value={this.state.url} onChange={this.handleInput}/>\n        <button type=\"submit\">Save</button>\n      </form>\n    )\n  }\n};\n\n// class ImageList extends Component{\n//\n//   render() {\n//     const images = this.props.images.map((image, index) => (\n//       <li key={index}>\n//         <img src={image.url} alt=\"\"/>\n//         <p>{image.caption}</p>\n//       </li>\n//     ));\n//\n//     return(\n//       <ul>\n//         {images}\n//       </ul>\n//     )\n//   }\n// };\n\nfunction ImageList(props) {\n    const images = props.images.map((image, index) => (\n      <li key={index}>\n        <img src={image.url} alt=\"\"/>\n        <p>{image.caption}</p>\n      </li>\n    ));\n\n    return(\n      <ul>\n        {images}\n      </ul>\n    );\n}\n\nclass ImageBoard extends Component{\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: [],\n    }\n\n    this.addImage = this.addImage.bind(this);\n  }\n\n  componentDidMount() {\n    const images = [\n      {\n        caption: 'random image',\n        url: 'https://images.ctfassets.net/yr4qj72ki4ky/legacyBlogPost77Thumbnail/cd4783ad7b35efc4367166a570a9952e/bigstock-Real-Java-Script-Code-Developi-217215433.jpg'\n      }\n    ];\n\n    this.setState({ images });\n  }\n\n  addImage(image) {\n    const images = [...this.state.images];\n    images.push(image);\n    this.setState({images});\n  }\n\n  render() {\n    console.log(this)\n    return(\n      <div>\n        <ImageForm addImage={this.addImage}/>\n        <ImageList images={this.state.images}/>\n      </div>\n    )\n  }\n}\n\nexport default ImageBoard;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ImageBoard from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageBoard />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}